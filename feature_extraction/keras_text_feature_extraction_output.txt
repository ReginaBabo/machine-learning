data = ['John']

Document count
1

Dictionary mapping words to the number of times they appeared on during fit
OrderedDict([('john', 1)])

Dictionary mapping words to their rank/index
{'john': 1}

Dictionary mapping words to the number of documents/texts they appeared on during fit
{'john': 1}

John
Sequence corresponding to the texts
[1]

Binary matrix corresponding to the texts
[ 0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]

Count matrix corresponding to the texts
[ 0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]

Tfidf matrix corresponding to the texts
[ 0.          0.40546511  0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.        ]

Freq matrix corresponding to the texts
[ 0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]

One hot
[4]

Text to word sequence
['john']

Hashing trick
[4]


data = ['John', 'likes']


Document count
2

Dictionary mapping words to the number of times they appeared on during fit
OrderedDict([('john', 1), ('likes', 1)])

Dictionary mapping words to their rank/index
{'john': 1, 'likes': 2}

Dictionary mapping words to the number of documents/texts they appeared on during fit
{'john': 1, 'likes': 1}

John
Sequence corresponding to the texts
[1]

Binary matrix corresponding to the texts
[ 0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]

Count matrix corresponding to the texts
[ 0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]

Tfidf matrix corresponding to the texts
[ 0.          0.69314718  0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.        ]

Freq matrix corresponding to the texts
[ 0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]

One hot
[4]

Text to word sequence
['john']

Hashing trick
[4]


data = ['John likes to watch movies. Mary likes movies too.',
        'John also likes to watch football games.']

Document count
2

Dictionary mapping words to the number of times they appeared on during fit
OrderedDict([('john', 2), ('likes', 3), ('to', 2), ('watch', 2), ('movies', 2), ('mary', 1), ('too', 1), ('also', 1), ('football', 1), ('games', 1)])

Dictionary mapping words to their rank/index
{'also': 8, 'movies': 5, 'football': 9, 'watch': 4, 'to': 3, 'games': 10, 'likes': 1, 'john': 2, 'mary': 6, 'too': 7}

Dictionary mapping words to the number of documents/texts they appeared on during fit
{'also': 1, 'to': 2, 'football': 1, 'watch': 2, 'movies': 1, 'games': 1, 'likes': 2, 'john': 2, 'mary': 1, 'too': 1}

John likes to watch movies. Mary likes movies too.
Sequence corresponding to the texts
[2, 1, 3, 4, 5, 6, 1, 5, 7]

Binary matrix corresponding to the texts
[ 0.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]

Count matrix corresponding to the texts
[ 0.  2.  1.  1.  1.  2.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]

Tfidf matrix corresponding to the texts
[ 0.          0.86490296  0.51082562  0.51082562  0.51082562  1.17360019
  0.69314718  0.69314718  0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.        ]

Freq matrix corresponding to the texts
[ 0.          0.22222222  0.11111111  0.11111111  0.11111111  0.22222222
  0.11111111  0.11111111  0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.        ]

One hot
[4, 22, 18, 13, 2, 6, 22, 2, 22]

Text to word sequence
['john', 'likes', 'to', 'watch', 'movies', 'mary', 'likes', 'movies', 'too']

Hashing trick
[4, 22, 18, 13, 2, 6, 22, 2, 22]
