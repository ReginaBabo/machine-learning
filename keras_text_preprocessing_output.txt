Document count
1
Dictionary mapping words to the number of times they appeared on during fit
OrderedDict([('john', 1)])
Dictionary mapping words to their rank/index
{'john': 1}
Dictionary mapping words to the number of documents/texts they appeared on during fit
{'john': 1}
John
Sequence corresponding to the texts
[1]
Binary matrix corresponding to the texts
[ 0.  1.  0.]
Count matrix corresponding to the texts
[ 0.  1.  0.]
Tfidf matrix corresponding to the texts
[ 0.          0.40546511  0.        ]
Freq matrix corresponding to the texts
[ 0.  1.  0.]
One hot
[2]
Text to word sequence
['john']
Hashing trick
[2]
Document count
1
Dictionary mapping words to the number of times they appeared on during fit
OrderedDict([('john', 1), ('mary', 1)])
Dictionary mapping words to their rank/index
{'john': 1, 'mary': 2}
Dictionary mapping words to the number of documents/texts they appeared on during fit
{'john': 1, 'mary': 1}
John Mary
Sequence corresponding to the texts
[1, 2]
Binary matrix corresponding to the texts
[ 0.  1.  1.]
Count matrix corresponding to the texts
[ 0.  1.  1.]
Tfidf matrix corresponding to the texts
[ 0.          0.40546511  0.40546511]
Freq matrix corresponding to the texts
[ 0.   0.5  0.5]
One hot
[2, 2]
Text to word sequence
['john', 'mary']
Hashing trick
[2, 2]
Document count
2
Dictionary mapping words to the number of times they appeared on during fit
OrderedDict([('john', 2), ('likes', 3), ('to', 2), ('watch', 2), ('movies', 2), ('mary', 1), ('too', 1), ('also', 1), ('football', 1), ('games', 1)])
Dictionary mapping words to their rank/index
{'also': 8, 'movies': 5, 'football': 9, 'watch': 4, 'to': 3, 'games': 10, 'likes': 1, 'john': 2, 'mary': 6, 'too': 7}
Dictionary mapping words to the number of documents/texts they appeared on during fit
{'also': 1, 'to': 2, 'football': 1, 'watch': 2, 'movies': 1, 'games': 1, 'likes': 2, 'john': 2, 'mary': 1, 'too': 1}
John likes to watch movies. Mary likes movies too.
Sequence corresponding to the texts
[2, 1, 1]
Binary matrix corresponding to the texts
[ 0.  1.  1.]
Count matrix corresponding to the texts
[ 0.  2.  1.]
Tfidf matrix corresponding to the texts
[ 0.          0.86490296  0.51082562]
Freq matrix corresponding to the texts
[ 0.          0.66666667  0.33333333]
One hot
[2, 2, 2, 1, 2, 2, 2, 2, 2]
Text to word sequence
['john', 'likes', 'to', 'watch', 'movies', 'mary', 'likes', 'movies', 'too']
Hashing trick
[2, 2, 2, 1, 2, 2, 2, 2, 2]
